version: '3'

services:
  email_model:
    container_name: email_model_instance1
    image: email:0.1
    restart: unless-stopped
    build:
      context: ./Backend
      dockerfile: Dockerfile_app1
    ports:
      - "5000:5000"
    networks:
      - my_network

  sms_model:
    container_name: sms_model_instance1
    image: sms:0.1
    restart: unless-stopped
    build:
      context: ./Backend
      dockerfile: Dockerfile_app2
    ports:
      - "8080:8080"
    networks:
      - my_network

  url_model:
    container_name: url_model_instance1
    image: url:0.1
    restart: unless-stopped
    build:
      context: ./Backend
      dockerfile: Dockerfile_app3
    ports:
      - "8888:8888"
    networks:
      - my_network

  api:
    container_name: api_instance1
    image: api:0.1
    restart: unless-stopped
    build:
      context: ./Frontend/Server
      dockerfile: Dockerfile_app3
    ports:
      - "3000:3000"
    depends_on:
      - mongo
    networks:
      - my_network

  client:
    container_name: client_instance1
    image: client:0.1
    build:
      context: ./Frontend
    ports:
      - "5173:5173"
    depends_on:
      - api
    networks:
      - my_network

  mongo:
    image: "mongo:latest"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    networks:
      - my_network
    volumes:
      - mongo-data:/data/db

networks:
  my_network:

volumes:
  mongo-data: